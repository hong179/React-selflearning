{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\testapp\\\\src\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport Header from \"./components/Header\";\nimport List from \"./components/List\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        id: '001',\n        name: \"吃饭\",\n        done: true\n      }, {\n        id: '002',\n        name: \"睡觉\",\n        done: true\n      }, {\n        id: '003',\n        name: \"打代码\",\n        done: false\n      }, {\n        id: '004',\n        name: \"逛街\",\n        done: true\n      }]\n    };\n\n    this.addTodo = todoObj => {\n      //获取原todos\n      const {\n        todos\n      } = this.state; //追加一个todo\n\n      const newTodos = [todoObj, ...todos]; //更新状态\n\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.updateTodo = (id, done) => {\n      //获取状态中的todos\n      const {\n        todos\n      } = this.state; //匹配处理数据\n\n      const newTodos = todos.map(todoObj => {\n        if (todoObj.id === id) return { ...todoObj,\n          done\n        };else return todoObj;\n      });\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.deleteTodo = id => {\n      //获取原来的todos\n      const {\n        todos\n      } = this.state; //删除指定id的todo对象\n\n      const newTodos = todos.filter(todoObj => {\n        return todoObj.id !== id;\n      }); //更新状态\n\n      this.setState({\n        todos: newTodos\n      });\n    };\n  }\n\n  render() {\n    const {\n      todos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            addTodo: this.addTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            todos: todos,\n            updateTodo: this.updateTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/React/testapp/src/App.jsx"],"names":["React","Component","Header","List","Footer","App","state","todos","id","name","done","addTodo","todoObj","newTodos","setState","updateTodo","map","deleteTodo","filter","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,WAAP;;AAEA,eAAe,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAEvCK,KAFuC,GAEjC;AAACC,MAAAA,KAAK,EAAC,CACT;AAACC,QAAAA,EAAE,EAAC,KAAJ;AAAUC,QAAAA,IAAI,EAAC,IAAf;AAAoBC,QAAAA,IAAI,EAAC;AAAzB,OADS,EAET;AAACF,QAAAA,EAAE,EAAC,KAAJ;AAAUC,QAAAA,IAAI,EAAC,IAAf;AAAoBC,QAAAA,IAAI,EAAC;AAAzB,OAFS,EAGT;AAACF,QAAAA,EAAE,EAAC,KAAJ;AAAUC,QAAAA,IAAI,EAAC,KAAf;AAAqBC,QAAAA,IAAI,EAAC;AAA1B,OAHS,EAIT;AAACF,QAAAA,EAAE,EAAC,KAAJ;AAAUC,QAAAA,IAAI,EAAC,IAAf;AAAoBC,QAAAA,IAAI,EAAC;AAAzB,OAJS;AAAP,KAFiC;;AAAA,SAQvCC,OARuC,GAQ5BC,OAAD,IAAa;AACnB;AACA,YAAM;AAACL,QAAAA;AAAD,UAAQ,KAAKD,KAAnB,CAFmB,CAGnB;;AACA,YAAMO,QAAQ,GAAC,CAACD,OAAD,EAAS,GAAGL,KAAZ,CAAf,CAJmB,CAKnB;;AACA,WAAKO,QAAL,CAAc;AAACP,QAAAA,KAAK,EAACM;AAAP,OAAd;AACH,KAfsC;;AAAA,SAiBvCE,UAjBuC,GAiB5B,CAACP,EAAD,EAAIE,IAAJ,KAAW;AAClB;AACA,YAAM;AAACH,QAAAA;AAAD,UAAQ,KAAKD,KAAnB,CAFkB,CAGlB;;AACA,YAAMO,QAAQ,GAACN,KAAK,CAACS,GAAN,CAAWJ,OAAD,IAAW;AACjC,YAAIA,OAAO,CAACJ,EAAR,KAAaA,EAAjB,EAAqB,OAAO,EAAC,GAAGI,OAAJ;AAAYF,UAAAA;AAAZ,SAAP,CAArB,KACK,OAAOE,OAAP;AAEP,OAJc,CAAf;AAKA,WAAKE,QAAL,CAAc;AAACP,QAAAA,KAAK,EAACM;AAAP,OAAd;AACH,KA3BsC;;AAAA,SA6BvCI,UA7BuC,GA6B3BT,EAAD,IAAM;AACb;AACA,YAAM;AAACD,QAAAA;AAAD,UAAQ,KAAKD,KAAnB,CAFa,CAGb;;AACA,YAAMO,QAAQ,GAACN,KAAK,CAACW,MAAN,CAAcN,OAAD,IAAW;AACnC,eAAOA,OAAO,CAACJ,EAAR,KAAcA,EAArB;AACH,OAFc,CAAf,CAJa,CAOb;;AACA,WAAKM,QAAL,CAAc;AAACP,QAAAA,KAAK,EAACM;AAAP,OAAd;AACH,KAtCsC;AAAA;;AAyCvCM,EAAAA,MAAM,GAAG;AACL,UAAM;AAACZ,MAAAA;AAAD,QAAQ,KAAKD,KAAnB;AACA,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,KAAKK;AAAtB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD;AAAM,YAAA,KAAK,EAAEJ,KAAb;AAAoB,YAAA,UAAU,EAAE,KAAKQ;AAArC;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAtDsC","sourcesContent":["import React, { Component } from 'react'\r\nimport Header from \"./components/Header\"\r\nimport List from \"./components/List\"\r\nimport Footer from \"./components/Footer\"\r\nimport \"./App.css\"\r\n\r\nexport default class App extends Component {\r\n    //状态在哪里，操作状态的方法就在哪里\r\n    state={todos:[\r\n        {id:'001',name:\"吃饭\",done:true},\r\n        {id:'002',name:\"睡觉\",done:true},\r\n        {id:'003',name:\"打代码\",done:false},\r\n        {id:'004',name:\"逛街\",done:true}\r\n    ]}\r\n    addTodo = (todoObj) => {\r\n        //获取原todos\r\n        const {todos}=this.state\r\n        //追加一个todo\r\n        const newTodos=[todoObj,...todos]\r\n        //更新状态\r\n        this.setState({todos:newTodos})\r\n    }\r\n    //用于更新一个todo对象\r\n    updateTodo=(id,done)=>{\r\n        //获取状态中的todos\r\n        const {todos}=this.state\r\n        //匹配处理数据\r\n        const newTodos=todos.map((todoObj)=>{\r\n           if (todoObj.id===id) return {...todoObj,done}\r\n           else return todoObj\r\n\r\n        })\r\n        this.setState({todos:newTodos})\r\n    }\r\n    //用于删除一个todo对象\r\n    deleteTodo=(id)=>{\r\n        //获取原来的todos\r\n        const {todos}=this.state \r\n        //删除指定id的todo对象\r\n        const newTodos=todos.filter((todoObj)=>{\r\n            return todoObj.id !==id\r\n        })\r\n        //更新状态\r\n        this.setState({todos:newTodos})\r\n    }\r\n\r\n\r\n    render() {\r\n        const {todos}=this.state\r\n        return (\r\n            <div>\r\n                <div className=\"todo-container\">\r\n                    <div className=\"todo-wrap\">\r\n                        <Header addTodo={this.addTodo}/>\r\n                        <List todos={todos} updateTodo={this.updateTodo}/>\r\n                        <Footer/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}